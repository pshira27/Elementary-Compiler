
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'lineleft+-left*/%CONSTANT10 CONSTANT16 DEC_OP DO DQ_MSG ELIF ELSE EQ_OP FOR GE_OP G_OP IDENTIFIER IF INC_OP INT INT16 LE_OP L_OP NE_OP PRINT PRINT_LN STRING WHILE line\t: \tInput line \n\t\t\t\t|\tEXIT empty Input\t:\tDeclaration\n\t\t\t\t| \tExpression\n\t\t\t\t| \tIf_Statement\n\t\t\t\t| \tWhile_Loop\n\t\t\t\t| \tFor_Loop\n\t\t\t\t| \tDo_While_Loop\n\t\t\t\t| \tPrint_Console  Declaration \t: \tDeclarationTypeNumber IDENTIFIER_ALL ";"\n\t\t\t\t\t\t|\tDeclarationTypeNumber ARRAY_MULTI_ASSIGN ";"\n\t\t\t\t\t\t| \tSTRING IDENTIFIER ";"\n\t\t\t\t\t\t|\tSTRING STRING_ASSIGN ";"  DeclarationTypeNumber \t: INT \n\t\t\t\t\t\t\t\t| INT16  IDENTIFIER_ASSIGN\t\t:\tIDENTIFIER "=" OperationConstant  STRING_ASSIGN\t\t:\tIDENTIFIER "=" DQ_MSG  IDENTIFIER_ARRAY\t:\tIDENTIFIER "[" ARRAY_SIZE "]"  ARRAY_MULTI_ASSIGN\t:\tIDENTIFIER "[" "]" "=" "{" MULTI_ASSIGN "}"  MULTI_ASSIGN\t\t:\tCONSTANT "," MULTI_ASSIGN\n\t\t\t\t\t\t\t|\tCONSTANT empty ARRAY_SIZE\t\t:\tIDENTIFIER \n\t\t\t\t\t\t|\tOperationConstant  OperationConstant\t:\tOperationStatement\n\t\t\t\t\t\t\t|\tOperationStatementInBracket\n\t\t\t\t\t\t\t|\tMinusVariable\n\t\t\t\t\t\t\t|\tCONSTANT_ALL\n\t\t\t\t\t\t\t|\tIDENTIFIER_ID  OperationStatementInBracket\t:\t"(" OperationStatement ")"  OperationStatement\t:\tOperationConstant \'+\' OperationConstant \n\t\t\t\t\t\t\t|\tOperationConstant \'-\' OperationConstant \n\t\t\t\t\t\t\t|\tOperationConstant \'*\' OperationConstant\n\t\t\t\t\t\t\t|\tOperationConstant \'/\' OperationConstant\n\t\t\t\t\t\t\t|\tOperationConstant \'%\' OperationConstant  MinusVariable\t\t:\tOperationVarDeclare OperationConstant  IDENTIFIER_ALL\t\t:\tIDENTIFIER_ASSIGN\n\t\t\t\t\t\t\t|\tIDENTIFIER_ARRAY\n\t\t\t\t\t\t\t|\tIDENTIFIER  IDENTIFIER_ID\t\t:\tIDENTIFIER_ARRAY\n\t\t\t\t\t\t\t|\tIDENTIFIER  CONSTANT_ALL\t\t:\tCONSTANT\n\t\t\t\t\t\t\t|\tIDENTIFIER  CONSTANT\t\t\t:\tCONSTANT10\n\t\t\t\t\t\t\t|\tCONSTANT16  INC_DEC_OPRERATOR\t:\tINC_OP\n\t\t\t\t\t\t\t|\tDEC_OP  OperationVarDeclare\t:\t"+"\n\t\t\t\t\t\t\t|\t"-"  Expression \t\t: \tIDENTIFIER_ID "=" OperationConstant ";"\n\t\t\t\t\t\t|\tIDENTIFIER_ID "=" DQ_MSG ";"\n\t\t\t\t\t\t|\tARRAY_MULTI_ASSIGN empty ";"\n\t\t\t\t\t\t| \tIDENTIFIER_ID INC_DEC_OPRERATOR ";"\n\t\t\t\t\t\t| \tINC_DEC_OPRERATOR IDENTIFIER_ID ";"  If_Statement\t:\tIF "(" Compare_Expreession ")" "{" statements "}" Elif_Else  Elif_Statement\t:\tELIF "(" Compare_Expreession ")" "{" statements "}" Elif_Else  Else_Statement\t:\tELSE "{" statements "}"  statements\t\t:\tempty empty\n\t\t\t\t\t\t|\tDeclaration statements\n\t\t\t\t\t\t|\tExpression statements\n\t\t\t\t\t\t|\tIf_Statement statements\n\t\t\t\t\t\t|\tWhile_Loop statements\n\t\t\t\t\t\t|\tFor_Loop statements\n\t\t\t\t\t\t|\tDo_While_Loop statements\n\t\t\t\t\t\t|\tPrint_Console statements  Elif_Else\t\t:\tempty\n\t\t\t\t\t\t|\tElif_Statement\n\t\t\t\t\t\t|\tElse_Statement  Compare_Expreession\t\t:\tOperationConstant Compare_Operator OperationConstant  Compare_Operator\t:\tL_OP\n\t\t\t\t\t\t\t|\tG_OP\n\t\t\t\t\t\t\t|\tLE_OP\n\t\t\t\t\t\t\t|\tGE_OP\n\t\t\t\t\t\t\t|\tEQ_OP\n\t\t\t\t\t\t\t|\tNE_OP  While_Loop\t:\tWHILE "(" Compare_Expreession ")" "{" statements "}"  For_Loop\t\t\t:\tFOR "(" DeclarationTypeNumber IDENTIFIER "=" OperationConstant ";" Compare_Expreession ";" IDENTIFIER_ALL_ASSIGN ")" "{" statements "}"\n\t\t\t\t\t\t\t|\tFOR "(" DeclarationTypeNumber IDENTIFIER "=" OperationConstant ";" Compare_Expreession ";" For_Loop_Crement ")" "{" statements "}"\n\t\t\t\t\t\t\t|\tFOR "(" IDENTIFIER "=" OperationConstant ";" Compare_Expreession ";" IDENTIFIER_ALL_ASSIGN ")" "{" statements "}"\n\t\t\t\t\t\t\t|\tFOR "(" IDENTIFIER "=" OperationConstant ";" Compare_Expreession ";" For_Loop_Crement ")" "{" statements "}"  IDENTIFIER_ALL_ASSIGN\t:\tIDENTIFIER_ID "=" OperationConstant  For_Loop_Crement\t:\tIDENTIFIER INC_DEC_OPRERATOR\n\t\t\t\t\t\t\t|\tINC_DEC_OPRERATOR IDENTIFIER  Do_While_Loop\t:\tDO "{" statements "}" WHILE "(" Compare_Expreession ")" ";"  Print_Console\t\t:\tPRINT "(" DQ_MSG ")" ";"\n\t\t\t\t\t\t\t|\tPRINT "(" DQ_MSG Print_Value ")" ";"\n\t\t\t\t\t\t\t|\tPRINT_LN "(" DQ_MSG ")" ";"\n\t\t\t\t\t\t\t|\tPRINT_LN "(" DQ_MSG Print_Value ")" ";"\t\n\t\t\t\t\t\t\t|\tPRINT_LN "(" empty empty ")" ";"  Print_Value\t\t\t:\tempty empty empty\n\t\t\t\t\t\t\t|\t"," IDENTIFIER_ALL Print_Value\n\t\t\t\t\t\t\t|\t"," CONSTANT Print_Value\n\t\t\t\t\t\t\t|\t"," DQ_MSG Print_Value empty :EXIT :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,28,29,49,50,52,53,55,75,76,107,108,149,156,166,171,172,176,177,182,183,184,185,199,210,224,225,226,227,228,229,],[-94,0,-94,-93,-3,-4,-5,-6,-7,-8,-9,-1,-2,-10,-11,-51,-12,-13,-52,-53,-49,-50,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,-83,-56,-78,-79,-93,-76,-77,-55,]),'STRING':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[13,13,-3,-4,-5,-6,-7,-8,-9,13,-10,-11,-51,-12,-13,-52,-53,13,13,13,13,13,13,13,-49,-50,13,13,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,13,-83,-56,13,13,13,13,13,-78,-79,-93,-76,-77,-55,]),'IF':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[17,17,-3,-4,-5,-6,-7,-8,-9,17,-10,-11,-51,-12,-13,-52,-53,17,17,17,17,17,17,17,-49,-50,17,17,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,17,-83,-56,17,17,17,17,17,-78,-79,-93,-76,-77,-55,]),'WHILE':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,120,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[18,18,-3,-4,-5,-6,-7,-8,-9,18,-10,-11,-51,-12,-13,-52,-53,18,18,18,18,18,18,18,-49,-50,148,18,18,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,18,-83,-56,18,18,18,18,18,-78,-79,-93,-76,-77,-55,]),'FOR':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[19,19,-3,-4,-5,-6,-7,-8,-9,19,-10,-11,-51,-12,-13,-52,-53,19,19,19,19,19,19,19,-49,-50,19,19,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,19,-83,-56,19,19,19,19,19,-78,-79,-93,-76,-77,-55,]),'DO':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[20,20,-3,-4,-5,-6,-7,-8,-9,20,-10,-11,-51,-12,-13,-52,-53,20,20,20,20,20,20,20,-49,-50,20,20,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,20,-83,-56,20,20,20,20,20,-78,-79,-93,-76,-77,-55,]),'PRINT':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[21,21,-3,-4,-5,-6,-7,-8,-9,21,-10,-11,-51,-12,-13,-52,-53,21,21,21,21,21,21,21,-49,-50,21,21,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,21,-83,-56,21,21,21,21,21,-78,-79,-93,-76,-77,-55,]),'PRINT_LN':([0,2,4,5,6,7,8,9,10,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[22,22,-3,-4,-5,-6,-7,-8,-9,22,-10,-11,-51,-12,-13,-52,-53,22,22,22,22,22,22,22,-49,-50,22,22,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,22,-83,-56,22,22,22,22,22,-78,-79,-93,-76,-77,-55,]),'INT':([0,2,4,5,6,7,8,9,10,45,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[23,23,-3,-4,-5,-6,-7,-8,-9,23,23,-10,-11,-51,-12,-13,-52,-53,23,23,23,23,23,23,23,-49,-50,23,23,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,23,-83,-56,23,23,23,23,23,-78,-79,-93,-76,-77,-55,]),'INT16':([0,2,4,5,6,7,8,9,10,45,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,192,199,210,213,214,216,217,218,224,225,226,227,228,229,],[24,24,-3,-4,-5,-6,-7,-8,-9,24,24,-10,-11,-51,-12,-13,-52,-53,24,24,24,24,24,24,24,-49,-50,24,24,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,24,-83,-56,24,24,24,24,24,-78,-79,-93,-76,-77,-55,]),'IDENTIFIER':([0,2,4,5,6,7,8,9,10,11,13,16,23,24,26,27,38,39,43,44,45,46,49,50,51,52,53,55,65,66,67,68,75,76,77,81,85,86,87,88,89,90,91,99,100,101,102,103,107,108,110,111,112,113,114,115,116,119,132,143,145,146,149,156,164,165,166,171,172,176,177,178,182,183,184,185,189,191,192,193,198,199,207,210,213,214,216,217,218,224,225,226,227,228,229,],[14,14,-3,-4,-5,-6,-7,-8,-9,34,36,42,-14,-15,-45,-46,56,74,74,74,82,14,-10,-11,74,-51,-12,-13,-47,-48,74,74,-52,-53,56,118,14,14,14,14,14,14,14,74,74,74,74,74,-49,-50,74,-69,-70,-71,-72,-73,-74,74,155,14,14,74,-84,-86,74,74,-85,-87,-88,-93,-75,74,-54,-65,-66,-67,194,74,14,194,208,-83,74,-56,14,14,14,14,14,-78,-79,-93,-76,-77,-55,]),'INC_OP':([0,2,4,5,6,7,8,9,10,14,15,25,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,98,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,189,192,193,194,199,210,213,214,216,217,218,224,225,226,227,228,229,],[26,26,-3,-4,-5,-6,-7,-8,-9,-40,26,-39,26,-10,-11,-51,-12,-13,-52,-53,26,26,26,26,26,26,26,-18,-49,-50,26,26,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,26,26,26,26,-83,-56,26,26,26,26,26,-78,-79,-93,-76,-77,-55,]),'DEC_OP':([0,2,4,5,6,7,8,9,10,14,15,25,46,49,50,52,53,55,75,76,85,86,87,88,89,90,91,98,107,108,143,145,149,156,166,171,172,176,177,182,183,184,185,189,192,193,194,199,210,213,214,216,217,218,224,225,226,227,228,229,],[27,27,-3,-4,-5,-6,-7,-8,-9,-40,27,-39,27,-10,-11,-51,-12,-13,-52,-53,27,27,27,27,27,27,27,-18,-49,-50,27,27,-84,-86,-85,-87,-88,-93,-75,-54,-65,-66,-67,27,27,27,27,-83,-56,27,27,27,27,27,-78,-79,-93,-76,-77,-55,]),';':([12,25,26,27,30,31,32,33,34,35,36,37,40,41,42,60,61,62,63,64,69,70,71,72,73,74,95,96,98,106,129,133,137,138,139,140,141,142,144,147,150,157,158,163,173,179,188,190,],[-93,-39,-45,-46,49,50,-36,-37,-38,52,53,55,75,76,-40,-24,-25,-26,-27,-28,-41,-43,-44,107,108,-40,-16,-17,-18,-35,149,156,-30,-31,-32,-33,-34,-29,-68,164,166,171,172,178,-19,189,193,199,]),'=':([14,15,25,34,36,57,82,98,118,155,194,197,],[-40,39,-39,51,54,97,119,-18,146,51,-40,207,]),'[':([14,34,42,56,74,155,194,],[38,38,77,77,77,77,77,]),'(':([17,18,19,21,22,38,39,43,44,51,65,66,67,68,77,99,100,101,102,103,110,111,112,113,114,115,116,119,146,148,164,165,178,186,191,207,],[43,44,45,47,48,67,67,67,67,67,-47,-48,67,67,67,67,67,67,67,67,67,-69,-70,-71,-72,-73,-74,67,67,165,67,67,67,191,67,67,]),'{':([20,97,109,117,187,205,206,209,211,212,],[46,136,143,145,192,213,214,216,217,218,]),'+':([25,38,39,43,44,51,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,79,95,98,99,100,101,102,103,104,105,106,110,111,112,113,114,115,116,119,137,138,139,140,141,142,144,146,147,163,164,165,178,191,207,215,],[-39,65,65,65,65,65,-40,99,-24,-25,-26,-27,-28,-47,-48,65,65,-41,-43,-44,99,-40,65,99,99,-18,65,65,65,65,65,-24,99,99,65,-69,-70,-71,-72,-73,-74,65,-30,-31,-32,-33,-34,-29,99,65,99,99,65,65,65,65,65,99,]),'-':([25,38,39,43,44,51,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,79,95,98,99,100,101,102,103,104,105,106,110,111,112,113,114,115,116,119,137,138,139,140,141,142,144,146,147,163,164,165,178,191,207,215,],[-39,66,66,66,66,66,-40,100,-24,-25,-26,-27,-28,-47,-48,66,66,-41,-43,-44,100,-40,66,100,100,-18,66,66,66,66,66,-24,100,100,66,-69,-70,-71,-72,-73,-74,66,-30,-31,-32,-33,-34,-29,100,66,100,100,66,66,66,66,66,100,]),'*':([25,56,59,60,61,62,63,64,69,70,71,72,74,79,95,98,104,105,106,137,138,139,140,141,142,144,147,163,215,],[-39,-40,101,-24,-25,-26,-27,-28,-41,-43,-44,101,-40,101,101,-18,-24,101,101,101,101,-32,-33,-34,-29,101,101,101,101,]),'/':([25,56,59,60,61,62,63,64,69,70,71,72,74,79,95,98,104,105,106,137,138,139,140,141,142,144,147,163,215,],[-39,-40,102,-24,-25,-26,-27,-28,-41,-43,-44,102,-40,102,102,-18,-24,102,102,102,102,-32,-33,-34,-29,102,102,102,102,]),'%':([25,56,59,60,61,62,63,64,69,70,71,72,74,79,95,98,104,105,106,137,138,139,140,141,142,144,147,163,215,],[-39,-40,103,-24,-25,-26,-27,-28,-41,-43,-44,103,-40,103,103,-18,-24,103,103,103,103,-32,-33,-34,-29,103,103,103,103,]),']':([25,38,56,58,59,60,61,62,63,64,69,70,71,74,98,106,137,138,139,140,141,142,],[-39,57,-22,98,-23,-24,-25,-26,-27,-28,-41,-43,-44,-40,-18,-35,-30,-31,-32,-33,-34,-29,]),'L_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,111,-18,-35,-30,-31,-32,-33,-34,-29,]),'G_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,112,-18,-35,-30,-31,-32,-33,-34,-29,]),'LE_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,113,-18,-35,-30,-31,-32,-33,-34,-29,]),'GE_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,114,-18,-35,-30,-31,-32,-33,-34,-29,]),'EQ_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,115,-18,-35,-30,-31,-32,-33,-34,-29,]),'NE_OP':([25,60,61,62,63,64,69,70,71,74,79,98,106,137,138,139,140,141,142,],[-39,-24,-25,-26,-27,-28,-41,-43,-44,-40,116,-18,-35,-30,-31,-32,-33,-34,-29,]),',':([25,32,33,60,61,62,63,64,69,70,71,74,92,93,95,98,106,137,138,139,140,141,142,152,153,154,155,160,],[-39,-36,-37,-24,-25,-26,-27,-28,-41,-43,-44,-40,132,132,-16,-18,-35,-30,-31,-32,-33,-34,-29,132,132,132,-38,174,]),')':([25,26,27,32,33,48,60,61,62,63,64,69,70,71,74,78,80,92,93,94,95,98,104,106,130,131,134,135,137,138,139,140,141,142,144,151,152,153,154,155,167,168,169,170,180,195,196,200,202,203,204,208,215,],[-39,-45,-46,-36,-37,-93,-24,-25,-26,-27,-28,-41,-43,-44,-40,109,117,129,133,-93,-16,-18,142,-35,150,-93,157,158,-30,-31,-32,-33,-34,-29,-68,-93,-93,-93,-93,-38,-89,-90,-91,-92,190,205,206,209,211,212,-81,-82,-80,]),'CONSTANT10':([38,39,43,44,51,65,66,67,68,77,99,100,101,102,103,110,111,112,113,114,115,116,119,132,136,146,164,165,174,178,191,207,],[70,70,70,70,70,-47,-48,70,70,70,70,70,70,70,70,70,-69,-70,-71,-72,-73,-74,70,70,70,70,70,70,70,70,70,70,]),'CONSTANT16':([38,39,43,44,51,65,66,67,68,77,99,100,101,102,103,110,111,112,113,114,115,116,119,132,136,146,164,165,174,178,191,207,],[71,71,71,71,71,-47,-48,71,71,71,71,71,71,71,71,71,-69,-70,-71,-72,-73,-74,71,71,71,71,71,71,71,71,71,71,]),'DQ_MSG':([39,47,48,54,132,],[73,92,93,96,154,]),'}':([46,49,50,52,53,55,70,71,75,76,83,84,85,86,87,88,89,90,91,107,108,121,122,123,124,125,126,127,128,143,145,149,156,159,160,161,162,166,171,172,175,176,177,181,182,183,184,185,192,199,201,210,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,],[-93,-10,-11,-51,-12,-13,-43,-44,-52,-53,120,-93,-93,-93,-93,-93,-93,-93,-93,-49,-50,-57,-58,-59,-60,-61,-62,-63,-64,-93,-93,-84,-86,173,-93,176,177,-85,-87,-88,-21,-93,-75,-20,-54,-65,-66,-67,-93,-83,210,-56,-93,-93,-93,-93,-93,224,225,226,227,228,-78,-79,-93,-76,-77,-55,]),'ELIF':([176,226,],[186,186,]),'ELSE':([176,226,],[187,187,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,2,],[1,28,]),'Input':([0,2,],[2,2,]),'EXIT':([0,2,],[3,3,]),'Declaration':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[4,4,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'Expression':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[5,5,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'If_Statement':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[6,6,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'While_Loop':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[7,7,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'For_Loop':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[8,8,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'Do_While_Loop':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[9,9,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'Print_Console':([0,2,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[10,10,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'DeclarationTypeNumber':([0,2,45,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[11,11,81,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ARRAY_MULTI_ASSIGN':([0,2,11,46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[12,12,31,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IDENTIFIER_ID':([0,2,16,38,39,43,44,46,51,67,68,77,85,86,87,88,89,90,91,99,100,101,102,103,110,119,143,145,146,164,165,178,189,191,192,193,207,213,214,216,217,218,],[15,15,41,64,64,64,64,15,64,64,64,64,15,15,15,15,15,15,15,64,64,64,64,64,64,64,15,15,64,64,64,64,197,64,15,197,64,15,15,15,15,15,]),'INC_DEC_OPRERATOR':([0,2,15,46,85,86,87,88,89,90,91,143,145,189,192,193,194,213,214,216,217,218,],[16,16,40,16,16,16,16,16,16,16,16,16,16,198,16,198,204,16,16,16,16,16,]),'IDENTIFIER_ARRAY':([0,2,11,16,38,39,43,44,46,51,67,68,77,85,86,87,88,89,90,91,99,100,101,102,103,110,119,132,143,145,146,164,165,178,189,191,192,193,207,213,214,216,217,218,],[25,25,33,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,33,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'empty':([3,12,46,48,84,85,86,87,88,89,90,91,92,93,94,131,143,145,151,152,153,154,160,176,192,213,214,216,217,218,226,],[29,35,84,94,121,84,84,84,84,84,84,84,131,131,135,151,84,84,167,131,131,131,175,183,84,84,84,84,84,84,183,]),'IDENTIFIER_ALL':([11,132,],[30,152,]),'IDENTIFIER_ASSIGN':([11,132,],[32,32,]),'STRING_ASSIGN':([13,],[37,]),'ARRAY_SIZE':([38,77,],[58,58,]),'OperationConstant':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[59,72,79,79,95,105,106,59,137,138,139,140,141,144,147,163,79,79,79,79,215,]),'OperationStatement':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[60,60,60,60,60,104,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'OperationStatementInBracket':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MinusVariable':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CONSTANT_ALL':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'OperationVarDeclare':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,146,164,165,178,191,207,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'CONSTANT':([38,39,43,44,51,67,68,77,99,100,101,102,103,110,119,132,136,146,164,165,174,178,191,207,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,153,160,69,69,69,160,69,69,69,]),'Compare_Expreession':([43,44,164,165,178,191,],[78,80,179,180,188,200,]),'statements':([46,85,86,87,88,89,90,91,143,145,192,213,214,216,217,218,],[83,122,123,124,125,126,127,128,161,162,201,219,220,221,222,223,]),'Compare_Operator':([79,],[110,]),'Print_Value':([92,93,152,153,154,],[130,134,168,169,170,]),'MULTI_ASSIGN':([136,174,],[159,181,]),'Elif_Else':([176,226,],[182,229,]),'Elif_Statement':([176,226,],[184,184,]),'Else_Statement':([176,226,],[185,185,]),'IDENTIFIER_ALL_ASSIGN':([189,193,],[195,202,]),'For_Loop_Crement':([189,193,],[196,203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> Input line','line',2,'p_start','bccparse.py',14),
  ('line -> EXIT empty','line',2,'p_start','bccparse.py',15),
  ('Input -> Declaration','Input',1,'p_input','bccparse.py',22),
  ('Input -> Expression','Input',1,'p_input','bccparse.py',23),
  ('Input -> If_Statement','Input',1,'p_input','bccparse.py',24),
  ('Input -> While_Loop','Input',1,'p_input','bccparse.py',25),
  ('Input -> For_Loop','Input',1,'p_input','bccparse.py',26),
  ('Input -> Do_While_Loop','Input',1,'p_input','bccparse.py',27),
  ('Input -> Print_Console','Input',1,'p_input','bccparse.py',28),
  ('Declaration -> DeclarationTypeNumber IDENTIFIER_ALL ;','Declaration',3,'p_declarationStatement','bccparse.py',33),
  ('Declaration -> DeclarationTypeNumber ARRAY_MULTI_ASSIGN ;','Declaration',3,'p_declarationStatement','bccparse.py',34),
  ('Declaration -> STRING IDENTIFIER ;','Declaration',3,'p_declarationStatement','bccparse.py',35),
  ('Declaration -> STRING STRING_ASSIGN ;','Declaration',3,'p_declarationStatement','bccparse.py',36),
  ('DeclarationTypeNumber -> INT','DeclarationTypeNumber',1,'p_declarationNumberType','bccparse.py',40),
  ('DeclarationTypeNumber -> INT16','DeclarationTypeNumber',1,'p_declarationNumberType','bccparse.py',41),
  ('IDENTIFIER_ASSIGN -> IDENTIFIER = OperationConstant','IDENTIFIER_ASSIGN',3,'p_identifierAssign','bccparse.py',45),
  ('STRING_ASSIGN -> IDENTIFIER = DQ_MSG','STRING_ASSIGN',3,'p_stringAssign','bccparse.py',49),
  ('IDENTIFIER_ARRAY -> IDENTIFIER [ ARRAY_SIZE ]','IDENTIFIER_ARRAY',4,'p_IdentifierArray','bccparse.py',53),
  ('ARRAY_MULTI_ASSIGN -> IDENTIFIER [ ] = { MULTI_ASSIGN }','ARRAY_MULTI_ASSIGN',7,'p_IdentifierArrayWithAssign','bccparse.py',57),
  ('MULTI_ASSIGN -> CONSTANT , MULTI_ASSIGN','MULTI_ASSIGN',3,'p_MultiAssign','bccparse.py',61),
  ('MULTI_ASSIGN -> CONSTANT empty','MULTI_ASSIGN',2,'p_MultiAssign','bccparse.py',62),
  ('ARRAY_SIZE -> IDENTIFIER','ARRAY_SIZE',1,'p_sizeOfArray','bccparse.py',69),
  ('ARRAY_SIZE -> OperationConstant','ARRAY_SIZE',1,'p_sizeOfArray','bccparse.py',70),
  ('OperationConstant -> OperationStatement','OperationConstant',1,'p_operationOfConstant','bccparse.py',74),
  ('OperationConstant -> OperationStatementInBracket','OperationConstant',1,'p_operationOfConstant','bccparse.py',75),
  ('OperationConstant -> MinusVariable','OperationConstant',1,'p_operationOfConstant','bccparse.py',76),
  ('OperationConstant -> CONSTANT_ALL','OperationConstant',1,'p_operationOfConstant','bccparse.py',77),
  ('OperationConstant -> IDENTIFIER_ID','OperationConstant',1,'p_operationOfConstant','bccparse.py',78),
  ('OperationStatementInBracket -> ( OperationStatement )','OperationStatementInBracket',3,'p_operationOfConstantBracket','bccparse.py',82),
  ('OperationStatement -> OperationConstant + OperationConstant','OperationStatement',3,'p_OperationStatements','bccparse.py',86),
  ('OperationStatement -> OperationConstant - OperationConstant','OperationStatement',3,'p_OperationStatements','bccparse.py',87),
  ('OperationStatement -> OperationConstant * OperationConstant','OperationStatement',3,'p_OperationStatements','bccparse.py',88),
  ('OperationStatement -> OperationConstant / OperationConstant','OperationStatement',3,'p_OperationStatements','bccparse.py',89),
  ('OperationStatement -> OperationConstant % OperationConstant','OperationStatement',3,'p_OperationStatements','bccparse.py',90),
  ('MinusVariable -> OperationVarDeclare OperationConstant','MinusVariable',2,'p_minusVariableDeclaration','bccparse.py',94),
  ('IDENTIFIER_ALL -> IDENTIFIER_ASSIGN','IDENTIFIER_ALL',1,'p_identifierAll','bccparse.py',101),
  ('IDENTIFIER_ALL -> IDENTIFIER_ARRAY','IDENTIFIER_ALL',1,'p_identifierAll','bccparse.py',102),
  ('IDENTIFIER_ALL -> IDENTIFIER','IDENTIFIER_ALL',1,'p_identifierAll','bccparse.py',103),
  ('IDENTIFIER_ID -> IDENTIFIER_ARRAY','IDENTIFIER_ID',1,'p_identifierID','bccparse.py',107),
  ('IDENTIFIER_ID -> IDENTIFIER','IDENTIFIER_ID',1,'p_identifierID','bccparse.py',108),
  ('CONSTANT_ALL -> CONSTANT','CONSTANT_ALL',1,'p_constantAll','bccparse.py',112),
  ('CONSTANT_ALL -> IDENTIFIER','CONSTANT_ALL',1,'p_constantAll','bccparse.py',113),
  ('CONSTANT -> CONSTANT10','CONSTANT',1,'p_constantDecOrHex','bccparse.py',117),
  ('CONSTANT -> CONSTANT16','CONSTANT',1,'p_constantDecOrHex','bccparse.py',118),
  ('INC_DEC_OPRERATOR -> INC_OP','INC_DEC_OPRERATOR',1,'p_incrementAndDecrement','bccparse.py',122),
  ('INC_DEC_OPRERATOR -> DEC_OP','INC_DEC_OPRERATOR',1,'p_incrementAndDecrement','bccparse.py',123),
  ('OperationVarDeclare -> +','OperationVarDeclare',1,'p_operationVariableDeclaration','bccparse.py',127),
  ('OperationVarDeclare -> -','OperationVarDeclare',1,'p_operationVariableDeclaration','bccparse.py',128),
  ('Expression -> IDENTIFIER_ID = OperationConstant ;','Expression',4,'p_expressionStatement','bccparse.py',133),
  ('Expression -> IDENTIFIER_ID = DQ_MSG ;','Expression',4,'p_expressionStatement','bccparse.py',134),
  ('Expression -> ARRAY_MULTI_ASSIGN empty ;','Expression',3,'p_expressionStatement','bccparse.py',135),
  ('Expression -> IDENTIFIER_ID INC_DEC_OPRERATOR ;','Expression',3,'p_expressionStatement','bccparse.py',136),
  ('Expression -> INC_DEC_OPRERATOR IDENTIFIER_ID ;','Expression',3,'p_expressionStatement','bccparse.py',137),
  ('If_Statement -> IF ( Compare_Expreession ) { statements } Elif_Else','If_Statement',8,'p_ifStatement','bccparse.py',148),
  ('Elif_Statement -> ELIF ( Compare_Expreession ) { statements } Elif_Else','Elif_Statement',8,'p_ElifStatement','bccparse.py',155),
  ('Else_Statement -> ELSE { statements }','Else_Statement',4,'p_ElseStatement','bccparse.py',162),
  ('statements -> empty empty','statements',2,'p_Statement','bccparse.py',166),
  ('statements -> Declaration statements','statements',2,'p_Statement','bccparse.py',167),
  ('statements -> Expression statements','statements',2,'p_Statement','bccparse.py',168),
  ('statements -> If_Statement statements','statements',2,'p_Statement','bccparse.py',169),
  ('statements -> While_Loop statements','statements',2,'p_Statement','bccparse.py',170),
  ('statements -> For_Loop statements','statements',2,'p_Statement','bccparse.py',171),
  ('statements -> Do_While_Loop statements','statements',2,'p_Statement','bccparse.py',172),
  ('statements -> Print_Console statements','statements',2,'p_Statement','bccparse.py',173),
  ('Elif_Else -> empty','Elif_Else',1,'p_elseifStatement','bccparse.py',182),
  ('Elif_Else -> Elif_Statement','Elif_Else',1,'p_elseifStatement','bccparse.py',183),
  ('Elif_Else -> Else_Statement','Elif_Else',1,'p_elseifStatement','bccparse.py',184),
  ('Compare_Expreession -> OperationConstant Compare_Operator OperationConstant','Compare_Expreession',3,'p_compareExpressionStatement','bccparse.py',188),
  ('Compare_Operator -> L_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',192),
  ('Compare_Operator -> G_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',193),
  ('Compare_Operator -> LE_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',194),
  ('Compare_Operator -> GE_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',195),
  ('Compare_Operator -> EQ_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',196),
  ('Compare_Operator -> NE_OP','Compare_Operator',1,'p_compareOperator','bccparse.py',197),
  ('While_Loop -> WHILE ( Compare_Expreession ) { statements }','While_Loop',7,'p_whileLoop','bccparse.py',202),
  ('For_Loop -> FOR ( DeclarationTypeNumber IDENTIFIER = OperationConstant ; Compare_Expreession ; IDENTIFIER_ALL_ASSIGN ) { statements }','For_Loop',14,'p_forLoop','bccparse.py',207),
  ('For_Loop -> FOR ( DeclarationTypeNumber IDENTIFIER = OperationConstant ; Compare_Expreession ; For_Loop_Crement ) { statements }','For_Loop',14,'p_forLoop','bccparse.py',208),
  ('For_Loop -> FOR ( IDENTIFIER = OperationConstant ; Compare_Expreession ; IDENTIFIER_ALL_ASSIGN ) { statements }','For_Loop',13,'p_forLoop','bccparse.py',209),
  ('For_Loop -> FOR ( IDENTIFIER = OperationConstant ; Compare_Expreession ; For_Loop_Crement ) { statements }','For_Loop',13,'p_forLoop','bccparse.py',210),
  ('IDENTIFIER_ALL_ASSIGN -> IDENTIFIER_ID = OperationConstant','IDENTIFIER_ALL_ASSIGN',3,'p_IdentifierAllAssign','bccparse.py',217),
  ('For_Loop_Crement -> IDENTIFIER INC_DEC_OPRERATOR','For_Loop_Crement',2,'p_forLoopCrements','bccparse.py',221),
  ('For_Loop_Crement -> INC_DEC_OPRERATOR IDENTIFIER','For_Loop_Crement',2,'p_forLoopCrements','bccparse.py',222),
  ('Do_While_Loop -> DO { statements } WHILE ( Compare_Expreession ) ;','Do_While_Loop',9,'p_doWhileLoop','bccparse.py',227),
  ('Print_Console -> PRINT ( DQ_MSG ) ;','Print_Console',5,'p_printConsole','bccparse.py',232),
  ('Print_Console -> PRINT ( DQ_MSG Print_Value ) ;','Print_Console',6,'p_printConsole','bccparse.py',233),
  ('Print_Console -> PRINT_LN ( DQ_MSG ) ;','Print_Console',5,'p_printConsole','bccparse.py',234),
  ('Print_Console -> PRINT_LN ( DQ_MSG Print_Value ) ;','Print_Console',6,'p_printConsole','bccparse.py',235),
  ('Print_Console -> PRINT_LN ( empty empty ) ;','Print_Console',6,'p_printConsole','bccparse.py',236),
  ('Print_Value -> empty empty empty','Print_Value',3,'p_printValue','bccparse.py',245),
  ('Print_Value -> , IDENTIFIER_ALL Print_Value','Print_Value',3,'p_printValue','bccparse.py',246),
  ('Print_Value -> , CONSTANT Print_Value','Print_Value',3,'p_printValue','bccparse.py',247),
  ('Print_Value -> , DQ_MSG Print_Value','Print_Value',3,'p_printValue','bccparse.py',248),
  ('empty -> <empty>','empty',0,'p_empty','bccparse.py',258),
  ('EXIT -> <empty>','EXIT',0,'p_exit','bccparse.py',262),
]
